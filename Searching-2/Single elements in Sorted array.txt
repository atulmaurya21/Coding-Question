class Solution {
    public int singleNonDuplicate(int[] nums) {
        int low=0, high=nums.length-1;
        int mid=0;
        if(high==0)
         return nums[0];
        while(low<=high)
        {
            mid=low + (high-low)/2;

            if((mid==nums.length-1 && nums[mid-1] != nums[mid]) || (mid==0 && nums[mid+1] != nums[mid])) // edge cases
             return nums[mid];

            if(nums[mid-1] != nums[mid] && nums[mid+1] != nums[mid])
             break;

            if(nums[mid-1] != nums[mid]) //if first occurrence
            {
                if(mid%2 ==0) 
                 low=mid+1;
                else
                 high=mid-1;
            }
            else // if second occurrence
            {
                if( (mid-1) % 2 == 0)
                 low=mid+1;
                else
                 high=mid-1; 
            }
        }
        return nums[mid];
    }
}